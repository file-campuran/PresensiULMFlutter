def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


android {
    compileSdkVersion 28

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId "com.absen_online"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    // signingConfigs {
    //    release {
    //        keyAlias keystoreProperties['keyAlias']
    //        keyPassword keystoreProperties['keyPassword']
    //        storeFile file(keystoreProperties['storeFile'])
    //        storePassword keystoreProperties['storePassword']
    //    }
    // }

    signingConfigs {
         release {
            storeFile file('vicon.jks')
            storePassword 'vicon2233'
            keyAlias 'key0'
            keyPassword 'vicon2233'
        }
    }

    buildTypes {
       release {
            signingConfig signingConfigs.release
       }
    }

    dependencies {
        api 'com.google.android.gms:play-services-vision:20.1.2'
        api 'com.google.android.gms:play-services-vision-common:19.1.2'
        api 'com.google.firebase:firebase-ml-vision-image-label-model:20.0.2'
        api 'com.google.android.gms:play-services-vision-image-labeling-internal:16.0.5'
        api 'com.google.firebase:firebase-ml-vision-face-model:20.0.2'
        api 'com.google.android.gms:play-services-vision-face-contour-internal:16.0.3'
        api 'com.google.android.gms:play-services-vision-image-label:18.1.0'
    }
}

flutter {
    source '../..'
}

apply plugin: 'com.android.application'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-analytics:17.2.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.google.firebase:firebase-messaging:20.1.6'
    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'
    implementation 'com.google.android.gms:play-services-vision:20.0.0'
    implementation 'com.google.firebase:firebase-ml-vision:24.0.3'
    implementation 'com.google.firebase:firebase-ml-vision-barcode-model:16.1.1'
    implementation 'com.google.firebase:firebase-analytics:18.0.0'
    implementation 'com.google.android.gms:play-services-basement:17.5.0'


}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
